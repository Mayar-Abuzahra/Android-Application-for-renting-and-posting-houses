// Generated by view binder compiler. Do not edit!
package com.example.renthouse.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.renthouse.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchTenantBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final CheckBox balcony;

  @NonNull
  public final Button button9;

  @NonNull
  public final CheckBox checkBox;

  @NonNull
  public final EditText city;

  @NonNull
  public final CheckBox garden;

  @NonNull
  public final EditText maximumNumberOfBedrooms;

  @NonNull
  public final EditText maximumSurfaceArea;

  @NonNull
  public final EditText minimumNumberOfBedrooms;

  @NonNull
  public final EditText minimumNumberOfRentalPrice;

  @NonNull
  public final EditText minimumSurfaceArea;

  @NonNull
  public final TextView textView10;

  @NonNull
  public final TextView textView11;

  @NonNull
  public final TextView textView12;

  @NonNull
  public final TextView textView13;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView textView6;

  @NonNull
  public final TextView textView9;

  private FragmentSearchTenantBinding(@NonNull FrameLayout rootView, @NonNull CheckBox balcony,
      @NonNull Button button9, @NonNull CheckBox checkBox, @NonNull EditText city,
      @NonNull CheckBox garden, @NonNull EditText maximumNumberOfBedrooms,
      @NonNull EditText maximumSurfaceArea, @NonNull EditText minimumNumberOfBedrooms,
      @NonNull EditText minimumNumberOfRentalPrice, @NonNull EditText minimumSurfaceArea,
      @NonNull TextView textView10, @NonNull TextView textView11, @NonNull TextView textView12,
      @NonNull TextView textView13, @NonNull TextView textView2, @NonNull TextView textView3,
      @NonNull TextView textView4, @NonNull TextView textView5, @NonNull TextView textView6,
      @NonNull TextView textView9) {
    this.rootView = rootView;
    this.balcony = balcony;
    this.button9 = button9;
    this.checkBox = checkBox;
    this.city = city;
    this.garden = garden;
    this.maximumNumberOfBedrooms = maximumNumberOfBedrooms;
    this.maximumSurfaceArea = maximumSurfaceArea;
    this.minimumNumberOfBedrooms = minimumNumberOfBedrooms;
    this.minimumNumberOfRentalPrice = minimumNumberOfRentalPrice;
    this.minimumSurfaceArea = minimumSurfaceArea;
    this.textView10 = textView10;
    this.textView11 = textView11;
    this.textView12 = textView12;
    this.textView13 = textView13;
    this.textView2 = textView2;
    this.textView3 = textView3;
    this.textView4 = textView4;
    this.textView5 = textView5;
    this.textView6 = textView6;
    this.textView9 = textView9;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchTenantBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchTenantBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search_tenant, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchTenantBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.balcony;
      CheckBox balcony = ViewBindings.findChildViewById(rootView, id);
      if (balcony == null) {
        break missingId;
      }

      id = R.id.button9;
      Button button9 = ViewBindings.findChildViewById(rootView, id);
      if (button9 == null) {
        break missingId;
      }

      id = R.id.checkBox;
      CheckBox checkBox = ViewBindings.findChildViewById(rootView, id);
      if (checkBox == null) {
        break missingId;
      }

      id = R.id.city;
      EditText city = ViewBindings.findChildViewById(rootView, id);
      if (city == null) {
        break missingId;
      }

      id = R.id.garden;
      CheckBox garden = ViewBindings.findChildViewById(rootView, id);
      if (garden == null) {
        break missingId;
      }

      id = R.id.maximum_number_of_bedrooms;
      EditText maximumNumberOfBedrooms = ViewBindings.findChildViewById(rootView, id);
      if (maximumNumberOfBedrooms == null) {
        break missingId;
      }

      id = R.id.maximum_surface_area;
      EditText maximumSurfaceArea = ViewBindings.findChildViewById(rootView, id);
      if (maximumSurfaceArea == null) {
        break missingId;
      }

      id = R.id.minimum_number_of_bedrooms;
      EditText minimumNumberOfBedrooms = ViewBindings.findChildViewById(rootView, id);
      if (minimumNumberOfBedrooms == null) {
        break missingId;
      }

      id = R.id.minimum_number_of_rental_price;
      EditText minimumNumberOfRentalPrice = ViewBindings.findChildViewById(rootView, id);
      if (minimumNumberOfRentalPrice == null) {
        break missingId;
      }

      id = R.id.minimum_surface_area;
      EditText minimumSurfaceArea = ViewBindings.findChildViewById(rootView, id);
      if (minimumSurfaceArea == null) {
        break missingId;
      }

      id = R.id.textView10;
      TextView textView10 = ViewBindings.findChildViewById(rootView, id);
      if (textView10 == null) {
        break missingId;
      }

      id = R.id.textView11;
      TextView textView11 = ViewBindings.findChildViewById(rootView, id);
      if (textView11 == null) {
        break missingId;
      }

      id = R.id.textView12;
      TextView textView12 = ViewBindings.findChildViewById(rootView, id);
      if (textView12 == null) {
        break missingId;
      }

      id = R.id.textView13;
      TextView textView13 = ViewBindings.findChildViewById(rootView, id);
      if (textView13 == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      return new FragmentSearchTenantBinding((FrameLayout) rootView, balcony, button9, checkBox,
          city, garden, maximumNumberOfBedrooms, maximumSurfaceArea, minimumNumberOfBedrooms,
          minimumNumberOfRentalPrice, minimumSurfaceArea, textView10, textView11, textView12,
          textView13, textView2, textView3, textView4, textView5, textView6, textView9);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
