// Generated by view binder compiler. Do not edit!
package com.example.renthouse.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.renthouse.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPostBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button Publish;

  @NonNull
  public final ImageButton pickImg;

  @NonNull
  public final EditText postAddress;

  @NonNull
  public final EditText postArea;

  @NonNull
  public final CheckBox postBalcony;

  @NonNull
  public final EditText postCity;

  @NonNull
  public final EditText postDate;

  @NonNull
  public final EditText postDescribtion;

  @NonNull
  public final CheckBox postFurnished;

  @NonNull
  public final CheckBox postGarden;

  @NonNull
  public final EditText postPrice;

  @NonNull
  public final EditText postRooms;

  @NonNull
  public final EditText postYear;

  @NonNull
  public final TextView textView3;

  private FragmentPostBinding(@NonNull LinearLayout rootView, @NonNull Button Publish,
      @NonNull ImageButton pickImg, @NonNull EditText postAddress, @NonNull EditText postArea,
      @NonNull CheckBox postBalcony, @NonNull EditText postCity, @NonNull EditText postDate,
      @NonNull EditText postDescribtion, @NonNull CheckBox postFurnished,
      @NonNull CheckBox postGarden, @NonNull EditText postPrice, @NonNull EditText postRooms,
      @NonNull EditText postYear, @NonNull TextView textView3) {
    this.rootView = rootView;
    this.Publish = Publish;
    this.pickImg = pickImg;
    this.postAddress = postAddress;
    this.postArea = postArea;
    this.postBalcony = postBalcony;
    this.postCity = postCity;
    this.postDate = postDate;
    this.postDescribtion = postDescribtion;
    this.postFurnished = postFurnished;
    this.postGarden = postGarden;
    this.postPrice = postPrice;
    this.postRooms = postRooms;
    this.postYear = postYear;
    this.textView3 = textView3;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Publish;
      Button Publish = ViewBindings.findChildViewById(rootView, id);
      if (Publish == null) {
        break missingId;
      }

      id = R.id.pickImg;
      ImageButton pickImg = ViewBindings.findChildViewById(rootView, id);
      if (pickImg == null) {
        break missingId;
      }

      id = R.id.post_address;
      EditText postAddress = ViewBindings.findChildViewById(rootView, id);
      if (postAddress == null) {
        break missingId;
      }

      id = R.id.post_area;
      EditText postArea = ViewBindings.findChildViewById(rootView, id);
      if (postArea == null) {
        break missingId;
      }

      id = R.id.post_balcony;
      CheckBox postBalcony = ViewBindings.findChildViewById(rootView, id);
      if (postBalcony == null) {
        break missingId;
      }

      id = R.id.post_city;
      EditText postCity = ViewBindings.findChildViewById(rootView, id);
      if (postCity == null) {
        break missingId;
      }

      id = R.id.post_date;
      EditText postDate = ViewBindings.findChildViewById(rootView, id);
      if (postDate == null) {
        break missingId;
      }

      id = R.id.post_describtion;
      EditText postDescribtion = ViewBindings.findChildViewById(rootView, id);
      if (postDescribtion == null) {
        break missingId;
      }

      id = R.id.post_furnished;
      CheckBox postFurnished = ViewBindings.findChildViewById(rootView, id);
      if (postFurnished == null) {
        break missingId;
      }

      id = R.id.post_garden;
      CheckBox postGarden = ViewBindings.findChildViewById(rootView, id);
      if (postGarden == null) {
        break missingId;
      }

      id = R.id.post_price;
      EditText postPrice = ViewBindings.findChildViewById(rootView, id);
      if (postPrice == null) {
        break missingId;
      }

      id = R.id.post_rooms;
      EditText postRooms = ViewBindings.findChildViewById(rootView, id);
      if (postRooms == null) {
        break missingId;
      }

      id = R.id.post_year;
      EditText postYear = ViewBindings.findChildViewById(rootView, id);
      if (postYear == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      return new FragmentPostBinding((LinearLayout) rootView, Publish, pickImg, postAddress,
          postArea, postBalcony, postCity, postDate, postDescribtion, postFurnished, postGarden,
          postPrice, postRooms, postYear, textView3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
